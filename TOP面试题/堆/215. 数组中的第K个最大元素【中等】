给定整数数组 nums 和整数 k，请返回数组中第 k 个最大的元素。

请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。

 

示例 1:
输入: [3,2,1,5,6,4] 和 k = 2
输出: 5
示例 2:
输入: [3,2,3,1,2,4,5,5,6] 和 k = 4
输出: 4
 

提示：
1 <= k <= nums.length <= 10^4
-104 <= nums[i] <= 10^4



class Solution:
    def findKthLargest(self, nums: List[int], k: int) -> int:
        def buildMaxHeap(nums):
            n=len(nums)
            for root in range(n//2,-1,-1):
                adjustMaxHeap(nums,root,n-1)
        def adjustMaxHeap(nums,root,size):
            if root>size:
                return
            root_num=nums[root]
            child=root*2+1
            while child<=size:
                if child+1<=size and nums[child]<nums[child+1]:
                    child+=1
                if root_num>=nums[child]:
                    break
                nums[root]=nums[child]
                root=child
                child=root*2+1
            nums[root]=root_num
        n=len(nums)
        buildMaxHeap(nums)
        for i in range(k-1):
            temp=nums[0]
            nums[0]=nums[n-i-1]
            nums[n-i-1]=temp
            adjustMaxHeap(nums,0,n-i-2)
        return nums[0]

