给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(!head||!head->next)
            return NULL;
        ListNode *fast=head,*slow=head;//快慢指针
        for(int i=0;i<n;i++)//快指针先走n+1步
            fast=fast->next;
        if(!fast)//删除的是头节点
            return head->next;
        while(fast->next){
            fast=fast->next;
            slow=slow->next;
        }
        slow->next=slow->next->next;//此时慢指针在要删的结点之前（所以前面时n+1步）
        return head;
    }
};
