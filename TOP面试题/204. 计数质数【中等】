给定整数 n ，返回 所有小于非负整数 n 的质数的数量 。

示例 1：
输入：n = 10
输出：4
解释：小于 10 的质数一共有 4 个, 它们是 2, 3, 5, 7 。

提示：
0 <= n <= 5 * 10^6


class Solution:
    def countPrimes(self, n: int) -> int:
        # 倍数都修改为非质数
        # 注意是小于n，不是小于等于n
        if n<3:
            return 0
        isPrime=[1]*n
        ans=0
        for i in range(2,n):
            if isPrime[i]:
                ans+=1
                j=2*i
                while j<n:
                    isPrime[j]=0
                    j+=i
        return ans

            
