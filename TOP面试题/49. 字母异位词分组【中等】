给你一个字符串数组，请你将 字母异位词 组合在一起。可以按任意顺序返回结果列表。
字母异位词 是由重新排列源单词的字母得到的一个新单词，所有源单词中的字母通常恰好只用一次。

示例 1:
输入: strs = ["eat", "tea", "tan", "ate", "nat", "bat"]
输出: [["bat"],["nat","tan"],["ate","eat","tea"]]
示例 2:
输入: strs = [""]
输出: [[""]]
示例 3:
输入: strs = ["a"]
输出: [["a"]]
 
提示：
1 <= strs.length <= 10^4
0 <= strs[i].length <= 100
strs[i] 仅包含小写字母


class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        vector<vector<string>> ans;
        unordered_map<string,vector<string>> map;//map是键-值对的组合,map<k,v>,无序比有序快
        for(auto str:strs){
            string s=str;
            sort(s.begin(),s.end());
            map[s].emplace_back(str);//push_back会创建一个临时对象，并将其压入容器中。而emplace_back会在容器管理的内存中直接创建对象。
        }
        for(auto i=map.begin();i!=map.end();i++){
            ans.emplace_back(i->second);//first会得到Map中key的有效值，second会得到Map中value的有效值。
        }
        return ans;
    }
};
