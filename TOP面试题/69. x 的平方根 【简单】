给你一个非负整数 x ，计算并返回 x 的 算术平方根 。
由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。
注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。

示例 1：
输入：x = 4
输出：2
示例 2：
输入：x = 8
输出：2
解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。
 
提示：
0 <= x <= 2^31 - 1



class Solution {
public:
    int mySqrt(int x) {//二分法
        int a=0,b=x,ans;
        while(a<b){
            int mid=a+(b-a)/2+1;
            //long temp=(long)mid*mid;
            if(mid<=x/mid){//用除法解决乘法越界long的问题
                ans=mid;
                a=mid;
            }
            else
                b=mid-1;
        }
        return ans;
    }
    int mySqrt(int x){//牛顿迭代法
        if(x==0)
            return 0;
        double C=x,x0=x;
        while(true){
            double xi=0.5*(x0+C/x0);
            if(fabs(x0-xi)<1e-5)
                break;
            x0=xi;
        }
        return int(x0);
    }
};
