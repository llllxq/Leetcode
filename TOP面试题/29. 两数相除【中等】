给定两个整数，被除数 dividend 和除数 divisor。将两数相除，要求不使用乘法、除法和 mod 运算符。

返回被除数 dividend 除以除数 divisor 得到的商。

整数除法的结果应当截去（truncate）其小数部分，例如：truncate(8.345) = 8 以及 truncate(-2.7335) = -2



class Solution {
public:
    int divide(int dividend, int divisor) {
        if(dividend==0)
            return 0;
        if(dividend==INT_MIN&&divisor==-1)
            return INT_MAX;
        if(dividend>INT_MIN&divisor==-1)
            return -dividend;
        if(divisor==1)
            return dividend;
        int symbol=1;
        if((dividend>0&&divisor<0)||(dividend<0&&divisor>0))
            symbol=-1;
        long n=dividend,m=divisor;
        if(n<0)
            n=-n;
        if(m<0)
            m=-m;    
        long ans=calculate(n,m);
        if(symbol>0){
            if(ans>INT_MAX)
                return INT_MAX;
            else
                return ans;
        }
        return -ans;
    }
    int calculate(long dividend, long divisor){//思想：翻倍法
        if(dividend<divisor)
            return 0;
        long n=1;
        long i=divisor;
        while((i*2)<=dividend){
            n*=2;
            i*=2;
        }
        return n+calculate(dividend-i,divisor);
    }
};
