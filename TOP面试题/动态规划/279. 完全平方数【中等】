给你一个整数 n ，返回 和为 n 的完全平方数的最少数量 。
完全平方数 是一个整数，其值等于另一个整数的平方；换句话说，其值等于一个整数自乘的积。例如，1、4、9 和 16 都是完全平方数，而 3 和 11 不是。

示例 1：
输入：n = 12
输出：3 
解释：12 = 4 + 4 + 4

提示：
1 <= n <= 10^4。


class Solution:
    def numSquares(self, n: int) -> int:
        # dp法：dp[i]由dp[i-j*j]得出，选择最小的dp[i]，所以递推公式：dp[i] = min(dp[i-j*j]+1, dp[i])
        # 实际上是背包问题
        ans=[0]*(n+1)
        for i in range(1,n+1):
            min_x=10000
            j=1
            while j*j<=i:
                min_x=min(min_x,ans[i-j*j])
                j+=1
            ans[i]=min_x+1
        return ans[n]
