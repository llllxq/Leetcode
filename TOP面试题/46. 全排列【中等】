给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。
示例 1：
输入：nums = [1,2,3]
输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]
示例 2：
输入：nums = [0,1]
输出：[[0,1],[1,0]]
示例 3：
输入：nums = [1]
输出：[[1]]
提示：
1 <= nums.length <= 6
-10 <= nums[i] <= 10
nums 中的所有整数 互不相同



class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        int n=nums.size();
        vector<vector<int>> ans;
        fillNum(ans,nums,0,n);
        return ans;
    }
    void fillNum(vector<vector<int>>& ans,vector<int> output,int i,int n){//ans引用需要加&，否则输出为空，不会改变原有的ans
        if(i==n){
            ans.push_back(output);
            return;
        }
        for(int j=i;j<n;j++){
            swap(output[i],output[j]);
            fillNum(ans,output,i+1,n);
            swap(output[i],output[j]);//使交换后的数组返回原样
        }
    }
};
