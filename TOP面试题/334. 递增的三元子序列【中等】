给你一个整数数组 nums ，判断这个数组中是否存在长度为 3 的递增子序列。

如果存在这样的三元组下标 (i, j, k) 且满足 i < j < k ，使得 nums[i] < nums[j] < nums[k] ，返回 true ；否则，返回 false 。
nums[4] == 4 < nums[5] == 6
 

提示：
1 <= nums.length <= 5 * 10^5
-2^31 <= nums[i] <= 2^31 - 1

class Solution:
    def increasingTriplet(self, nums: List[int]) -> bool:
        if len(set(nums))<3:
            return False
        min_n,max_n=float('inf'),float('inf')
        # min_n记录最小元素，max_n记录中间元素，不断更新min_n并保持中间元素尽可能小
        # 出现比中间元素大的元素，说明找到了三元组
        for i in nums:
            if i<min_n:
                min_n=i
            elif min_n<i and i<=max_n:
                max_n=i
            elif i>max_n:
                return True
        return False
