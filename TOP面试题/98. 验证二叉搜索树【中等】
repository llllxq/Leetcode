给你一个二叉树的根节点 root ，判断其是否是一个有效的二叉搜索树。

有效 二叉搜索树定义如下：

节点的左子树只包含 小于 当前节点的数。
节点的右子树只包含 大于 当前节点的数。
所有左子树和右子树自身必须也是二叉搜索树。


# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def isValidBST(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        def compare(root,l,r):
            if not root:
                return True
            if root.val<=l or root.val>=r:
                return False
            if not compare(root.right,root.val,r) or not compare(root.left,l,root.val):
                return False
            return True
        return compare(root,float('-inf'),float('inf'))
