给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有和为 0 且不重复的三元组。

注意：答案中不可以包含重复的三元组。

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n=nums.size();
        vector<vector<int>> res={};//是个二维vector
        if(n<3)//小于3个不存在答案
            return res;
        sort(nums.begin(),nums.end());
        for(int i=0;i<n-2;i++){
            if(nums[i]>0)//此时第一个数已经大于0，后续的值一定比它大，不可能还有
                return res;
            if(i>0&&nums[i]==nums[i-1])//跳过第一个数相同的重复答案
                continue;
            for(int j=i+1,k=n-1;j<k;){//从两边分别向中间查找，小了往右，大往左
                if(nums[i]+nums[j]+nums[k]==0){
                    vector<int> temp;
                    temp.push_back(nums[i]);
                    temp.push_back(nums[j]);
                    temp.push_back(nums[k]);
                    res.push_back(temp);
                    while(j<k&&nums[j]==nums[j+1])//跳过重复答案
                        j++;
                    while(j<k&&nums[k]==nums[k-1])
                        k--;
                    j++;
                    k--;
                }
                else if(nums[i]+nums[j]+nums[k]>0)
                    k--;
                else
                    j++;
            }
        }
        return res;
    }
};
