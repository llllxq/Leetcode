给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。答案可以按 任意顺序 返回。

给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。


示例 1：
输入：digits = "23"
输出：["ad","ae","af","bd","be","bf","cd","ce","cf"]
示例 2：
输入：digits = ""
输出：[]
示例 3：
输入：digits = "2"
输出：["a","b","c"]
 
提示：
0 <= digits.length <= 4
digits[i] 是范围 ['2', '9'] 的一个数字。



class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        ans=[]
        if digits=='':
            return ans
        s = ""
        dic = ["","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"]
        def backtrack(digits,index, s):
            if index == len(digits):
                return ans.append(s)
            digit = int(digits[index]) # 转为int
            letters = dic[digit] # 数字对应字符集
            for i in range(len(letters)):
                s += letters[i]
                backtrack(digits, index+1, s) # 递归
                s = s[:-1] #回溯
        backtrack(digits, 0, s)
        return ans
