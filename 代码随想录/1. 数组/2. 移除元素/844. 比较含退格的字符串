给定 s 和 t 两个字符串，当它们分别被输入到空白的文本编辑器后，如果两者相等，返回 true 。# 代表退格字符。
注意：如果对空文本输入退格字符，文本继续为空。

示例 2：
输入：s = "ab##", t = "c#d#"
输出：true
解释：s 和 t 都会变成 ""。

提示：
1 <= s.length, t.length <= 200
s 和 t 只含有小写字母以及字符 '#'

class Solution:
    def backspaceCompare(self, s: str, t: str) -> bool:
        s_len,t_len=len(s),len(t)
        s_r,t_r=s_len-1,t_len-1
        s_n,t_n=0,0 # 统计'#'的数量
        while s_r>=0 or t_r>=0: # 由于#的存在只会影响左边的元素，因此倒序遍历
            while s_r>=0:
                if s[s_r]=='#':
                    s_n+=1
                    s_r-=1 # 指针向左移动一格
                elif s_n>0:
                    s_n-=1 # 之前存在未抵消的#
                    s_r-=1 # 指针向左移动一格
                else:
                    break # 跳出此层while循环
            while t_r>=0:
                if t[t_r]=='#':
                    t_n+=1
                    t_r-=1
                elif t_n>0:
                    t_n-=1
                    t_r-=1
                else:
                    break
            if s_r>=0 and t_r>=0:
                if s[s_r]!=t[t_r]:
                    return False
            elif (s_r>=0 and t_r<0) or (s_r<0 and t_r>=0): # 也可以写成s_r>=0 or t_r>=0，因为第一个if匹配成功后，不会进入此处的elif
                return False
            s_r-=1 # 结束对比后，全部向左移动一格
            t_r-=1
        return True
