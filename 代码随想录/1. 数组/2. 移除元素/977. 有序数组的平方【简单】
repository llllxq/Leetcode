给你一个按 非递减顺序 排序的整数数组 nums，返回 每个数字的平方 组成的新数组，要求也按 非递减顺序 排序。

提示：
1 <= nums.length <= 10^4
-10^4 <= nums[i] <= 10^4
nums 已按 非递减顺序 排序

class Solution:
    def sortedSquares(self, nums: List[int]) -> List[int]:
        l, r = 0, 1
        ans = []
        if len(nums)<=1: # 特殊情况处理
            ans.append(nums[0]*nums[0])
            return ans
        while r <= len(nums) - 1 and nums[r] < 0: # 找到最大的负值l
            l += 1
            r += 1
        # 也可以直接从两头开始比
        while l >= 0 and r <= len(nums) - 1:
            if nums[l] * nums[l] < nums[r] * nums[r]:
                ans.append(nums[l] * nums[l])
                l -= 1
            else:
                ans.append(nums[r] * nums[r])
                r += 1
        while l >= 0:
            ans.append(nums[l] * nums[l])
            l -= 1
        while r <= len(nums) - 1:
            ans.append(nums[r] * nums[r])
            r += 1
        return ans
        
