给你一个链表的头节点 head 和一个整数 val ，请你删除链表中所有满足 Node.val == val 的节点，并返回 新的头节点 。


提示：
列表中的节点数目在范围 [0, 10^4] 内
1 <= Node.val <= 50
0 <= val <= 50


# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeElements(self, head: Optional[ListNode], val: int) -> Optional[ListNode]:
        tmp_head=ListNode(next=head) # 构建虚拟结点头
        p=tmp_head # 移动的指针
        while p.next!=None:
            if p.next.val==val:
                p.next=p.next.next
            else: # 一定要有else，因为可能有连续出现=val的结点，此时p不能后移
                p=p.next
        return tmp_head.next
